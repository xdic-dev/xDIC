%ATTEMPT TO FIT JAI DATA ONTO THE 3D SURFACE GENERATED BY THE
%RECONSTRUCTION 

%% load data jai
baseResultPath = "D:\INMACOSY Dropbox\Donatien Doumont\myDropbox\SMP_data\MultiView_project\2023_04_acquisition_sept_oct"; 
ncorr_jai = load(fullfile(baseResultPath,'analysis','S03','coating','002','loading','ncorr_JAI.mat'));

%% load data multidic
data_MD = load(fullfile(baseResultPath,'analysis','S03','coating','001','loading','DIC3DPPresults_2Pairs_cum_v1.mat'));
data_MD = data_MD.DIC3DPPresults; 

%% setup images
nbrbit = 8; 
greyscale_scale = 2^nbrbit-1; 
siz = [size(ncorr_jai.current_save(1).gs),length(ncorr_jai.current_save)]; 
im = zeros(siz); 
for ii = 1:siz(3)
    im(:,:,ii) = ncorr_jai.current_save(ii).gs*greyscale_scale; 
end
%% Making the correspondance 
resolution = 75; %pixel/mm
frame_i = 1; 
dx = 1060; %pixel
dy = 1120; %pixel
angle = [-8 0 0]; 
p = zeros(length(data_MD.Points3D{1}),2,length(data_MD.Points3D)); 
p3 = zeros(length(data_MD.Points3D{1}),3,length(data_MD.Points3D)); 
for ii = 1:length(data_MD.Points3D)
    pCtransform = pointCloud([data_MD.Points3D{ii}(:,2),data_MD.Points3D{ii}(:,1),data_MD.Points3D{ii}(:,3)]);
    p3(:,:,ii) = pCtransform.Location;
    tform = myrigidtform3d(angle,[0 0 0]);
    pCtransform = pctransform(pCtransform,tform); 
    pCtransform = pCtransform.Location(:,[1,2]);
    p(:,:,ii) = pCtransform*resolution + [dx,dy];
end

%% 
im = temp2(:,:,20:1:97); 
%%
corrcoef = zeros(size(im)); 
for ii = 1:length(data_dic_save.displacements)
    corrcoef(:,:,ii) = imresize(data_dic_save.displacements(ii).plot_corrcoef_dic,[1216,1936]); 
end
%%
%%
player([im_modif,corrcoef*100])
%%
player(im_modif)
%%
mask = reshape(im>100,size(im)); 
imref = im(mask); 
%player([im,imref]);
%%

sigma = 1; 
filter_un = @(x) imgaussfilt(x,sigma,'Padding',20);
fieldfilt = roifilt2(field,BW,filter_un);
%%
player([im,255*imbinarize(im(:,:,:),75/255)])
%%
siz = size(im); 
sigma = 1; 
level = 70; 
mask1 = imbinarize(im,level/255); %find the region of reflections
im_satur = satur(im,'level',level);
imSmooth = imgaussfilt3(im_satur, sigma,'FilterDomain','spatial','padding',10);
mask2 = (im-imSmooth)>20; 
mask = mask1|mask2;
% for level = [60,75]
% BW = false(siz);
% roi = false(siz);
% roi(:,:,1) = reference_save.roi.mask; 
im_modif = im_satur; 
% temproi = current_save(1).roi.mask; 
p = zeros(siz(1)*siz(2),2,siz(3)); 
for ii = 1:siz(3)
%     if ii ~= 1
%     temproi = current_save(ii-1).roi.mask; 
%     end
    %BW(:,:,ii) = mask(:,:,ii) ;%| boundarymask(mask(:,:,ii),4);
    tempmask = mask(:,:,ii)|boundarymask(mask(:,:,ii),4);
    tempim = im_satur(:,:,ii);
    tempsmooth = imSmooth(:,:,ii); 
% %     tempsmooth(~temproi)=0; 
% %     tempim(~temproi)=0;
    tempim(tempmask)=tempsmooth(tempmask); %replace the reflections by smoothed pixels 
    im_modif(:,:,ii)=tempim;
    [y,x] = find(tempmask);
    p(1:length(y),:,ii) = [x,y]; 
end

player([satur((im-imSmooth),'level',level),level*((im-imSmooth)<20);im,im_modif],...
    'morepoints',p+[0,siz(1)],'points',p+[siz(2),siz(1)]);
%     im_conc = [im_conc;im_modif]; 
% end
% st = regionprops(my_binary_image, 'BoundingBox', 'Area' );

% player(im_conc)
%%
level = 1; 
BW1 = imbinarize(im(:,:,1),level/255); 
level = 75; 
BW2 = ~imbinarize(im(:,:,1),level/255); 
figure; imshow(BW1&BW2); 
%%
figure; 
imhist(im_modif(:,:,1)); 
%%
player(satur(im_modif,'level',75)); 
%%
props = regionprops(im(:,:,1),"MaxIntensity");
%%
%
% hf = figure; 
% ax = subplot_ax(1,1); hold(ax,'on'); 
% set(hf,'CurrentAxes',ax); 
player(im,'morepoints',p(:,:,1:20)); 
%%
framei = 20; 
ptcld = pointCloud([squeeze(p3(:,2,framei)),squeeze(p3(:,1,framei)),squeeze(p3(:,3,framei))]); 
pcshow(ptcld)

%%
load mristack
figure; montage(mristack,'BackgroundColor','w')
H = fspecial3('ellipsoid',[7 7 3]);
volSmooth = imfilter(mristack,H,'replicate');
montage(volSmooth,'BackgroundColor','w')
%%
%%
player(satur(im,'level',75)-satur(imSmooth,'level',75)>20)